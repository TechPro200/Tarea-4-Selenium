{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-09T00:42:13.743Z",
    "end": "2025-08-09T00:42:36.601Z",
    "duration": 22858,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f138c50f-3f4e-4ea9-a7ab-726697080090",
      "title": "",
      "fullFile": "C:\\Users\\tutan\\Tarea-4-Selenium\\tests\\Edit-proyects.spec.js",
      "file": "\\tests\\Edit-proyects.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "46d2c046-001b-46f8-b568-b686a643e89f",
          "title": "Funcionalidad de Edición de Proyecto en Timecamp",
          "fullFile": "C:\\Users\\tutan\\Tarea-4-Selenium\\tests\\Edit-proyects.spec.js",
          "file": "\\tests\\Edit-proyects.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Funcionalidad de Edición de Proyecto en Timecamp\"",
              "fullTitle": "Funcionalidad de Edición de Proyecto en Timecamp \"before all\" hook in \"Funcionalidad de Edición de Proyecto en Timecamp\"",
              "timedOut": false,
              "duration": 906,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeService(service)\n    .build();",
              "err": {},
              "uuid": "4f464a0b-3f25-465a-8d1e-d959455dcc58",
              "parentUUID": "46d2c046-001b-46f8-b568-b686a643e89f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Funcionalidad de Edición de Proyecto en Timecamp\"",
              "fullTitle": "Funcionalidad de Edición de Proyecto en Timecamp \"after all\" hook in \"Funcionalidad de Edición de Proyecto en Timecamp\"",
              "timedOut": false,
              "duration": 159,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) await driver.quit();",
              "err": {},
              "uuid": "393a35f5-735a-4a63-a433-8f13bc688a5d",
              "parentUUID": "46d2c046-001b-46f8-b568-b686a643e89f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Debe editar el primer proyecto visible correctamente con pausas",
              "fullTitle": "Funcionalidad de Edición de Proyecto en Timecamp Debe editar el primer proyecto visible correctamente con pausas",
              "timedOut": false,
              "duration": 21778,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('\\n--- INICIANDO PRUEBA DE EDICIÓN DE PROYECTO ---');\n\nawait driver.get('https://app.timecamp.com/auth/login');\nconst emailInput = await driver.wait(until.elementLocated(By.id('email')), 15000);\nconst passwordInput = await driver.wait(until.elementLocated(By.id('pass_hash')), 15000);\nawait emailInput.sendKeys('penp57981@gmail.com');\nawait passwordInput.sendKeys('Preubatarea4...');\nconst loginButton = await driver.wait(until.elementLocated(By.css('button[type=\"submit\"]')), 10000);\nawait loginButton.click();\nawait driver.wait(until.urlContains('https://app.timecamp.com/app#/timesheets/timer'), 20000);\nconsole.log('Inicio de sesión exitoso.');\nawait sleep(2000);\n\nawait driver.executeScript(`\n  const mainMenuDiv = document.querySelector('div#main-menu-v');\n  if (!mainMenuDiv) throw new Error('No existe div#main-menu-v');\n  const sidebar = mainMenuDiv.querySelector('web-main-sidebar');\n  if (!sidebar) throw new Error('No existe web-main-sidebar');\n  const shadowRoot = sidebar.shadowRoot;\n  if (!shadowRoot) throw new Error('No existe shadowRoot en web-main-sidebar');\n  const projectsLink = shadowRoot.querySelector('a[href=\"/time_tracking/manage\"]');\n  if (!projectsLink) throw new Error('No se encontró enlace de proyectos');\n  projectsLink.click();\n`);\nawait driver.wait(until.urlContains('/time_tracking/manage'), 15000);\nconsole.log('Se ha llegado a la página de Proyectos.');\nawait takeScreenshot('01-projects-page-before-edit');\nawait sleep(2000);\n\nconst firstProjectDiv = await driver.wait(\n    until.elementLocated(By.css('div.tc-ui-task-name.tc-ui-task-name-clickable')),\n    15000\n);\nawait firstProjectDiv.click();\nconsole.log('Se hizo click en el primer proyecto para abrir menú.');\nawait takeScreenshot('02-project-menu-opened');\nawait sleep(1500);\nconst menuButton = await driver.wait(\n    until.elementLocated(By.css('button[data-testid=\"view-more-actions\"]')),\n    10000\n);\nawait menuButton.click();\nconsole.log('Se hizo click en el botón de más acciones para desplegar menú.');\nawait sleep(1500);\nawait takeScreenshot('03-more-actions-menu');\nconst projectNameInput = await driver.wait(\n    until.elementLocated(By.css('input.form-control.tc-form-control.editTaskBox-name')),\n    15000\n);\nconst currentName = await projectNameInput.getAttribute('value');\nconst newName = currentName + '2';\nawait projectNameInput.clear();\nawait projectNameInput.sendKeys(newName);\nconsole.log(`Cambiado nombre proyecto de \"${currentName}\" a \"${newName}\".`);\nawait takeScreenshot('04-project-name-edited');\nawait sleep(2000);\n\nconst saveBtn = await driver.wait(\n    until.elementLocated(By.css('a.btn.tc-btn.btn-success.editTaskBox-addBtn[data-testid=\"manage-project-save-link\"]')),\n    15000\n);\nawait saveBtn.click();\nconsole.log('Clic en botón \"Save\".');\nawait driver.wait(async () => {\n    const text = await saveBtn.getText();\n    return text.toLowerCase().includes('saving');\n}, 10000);\nawait driver.wait(async () => {\n    const text = await saveBtn.getText();\n    return text.toLowerCase().includes('save');\n}, 10000);\nconsole.log('Proyecto guardado exitosamente.');\nawait takeScreenshot('05-project-edited');\nconsole.log('--- PRUEBA DE EDICIÓN DE PROYECTO FINALIZADA ---');",
              "err": {},
              "uuid": "2b66b55c-7d30-4ae2-a0a4-ed24814f9c31",
              "parentUUID": "46d2c046-001b-46f8-b568-b686a643e89f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b66b55c-7d30-4ae2-a0a4-ed24814f9c31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21778,
          "root": false,
          "rootEmpty": false,
          "_timeout": 120000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "edit-projects-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "edit-projects-report",
        "overwrite": "false"
      },
      "version": "6.2.0"
    }
  }
}